#server {
#    listen 0.0.0.0:80;
#    server_name staging.thevetted.net 10.236.165.247;
#    return 301 $scheme://staging.thevetted.net$request_uri;
#}

server {
    # default server

    listen 80;
    server_name _ default;

    return 444;
}


server {
    listen 0.0.0.0:80;
    server_name *.thevetted.net;
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/htpasswd;
    client_max_body_size 25M;

    # no security problem here, since / is alway passed to upstream
    root /src/thevetted/VPP/;

    # serve directly - analogous for static/staticfiles
    location /static/ {
        alias /src/thevetted/VPP/med_social/static_collected/;
        # if asset versioning is used
        if ($query_string) {
            expires max;
        }
        autoindex off;
    }

    location /protected/ {
        internal;
        alias /src/thevetted/VPP/med_social/media/internal/;
    }

    location /media/ {
        alias /src/thevetted/VPP/med_social/media/;
        autoindex off;
    }

    location / {
        if (-f $document_root/med_social/templates/maintenence.html) {
                return 503;
        }
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_read_timeout 1200s;
        proxy_connect_timeout 300s;
        proxy_pass http://127.0.0.1:8000/;
    }
    # what to serve if upstream is not available or crashes
    error_page 500 502 504 /500.html;
    error_page 503 @maintenence;

    location = /500.html {
        root /src/thevetted/VPP/med_social/templates/;
        allow all;
    }

    location @maintenence {
        rewrite ^(.*)$ /maintenence.html break;
    }
}
